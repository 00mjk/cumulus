// Copyright 2019 Parity Technologies (UK) Ltd.
// This file is part of Cumulus.

// Cumulus is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Cumulus is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Cumulus.  If not, see <http://www.gnu.org/licenses/>.

use ansi_term::Color;
use cumulus_collator::{prepare_collator_config, CollatorBuilder};
use cumulus_network::DelayedBlockAnnounceValidator;
use futures::{future::ready, FutureExt};
use polkadot_primitives::parachain::CollatorPair;
use sc_executor::native_executor_instance;
pub use sc_executor::NativeExecutor;
use sc_finality_grandpa::{
	FinalityProofProvider as GrandpaFinalityProofProvider, StorageAndProofProvider,
};
use sc_informant::OutputFormat;
use sc_service::{Configuration, TaskManager};
use std::sync::Arc;

// Our native executor instance.
native_executor_instance!(
	pub Executor,
	parachain_runtime::api::dispatch,
	parachain_runtime::native_version,
);

/// Starts a `ServiceBuilder` for a full service.
///
/// Use this macro if you don't actually need the full service, but just the builder in order to
/// be able to perform chain operations.
macro_rules! new_full_start {
	($config:expr) => {{
		let inherent_data_providers = sp_inherents::InherentDataProviders::new();

		let builder = sc_service::ServiceBuilder::new_full::<
			parachain_runtime::opaque::Block,
			parachain_runtime::RuntimeApi,
			crate::service::Executor,
		>($config)?
		.with_select_chain(|_config, backend| Ok(sc_consensus::LongestChain::new(backend.clone())))?
		.with_transaction_pool(|builder| {
			let client = builder.client();
			let pool_api = Arc::new(sc_transaction_pool::FullChainApi::new(
				client.clone(),
				builder.prometheus_registry(),
			));
			let pool = sc_transaction_pool::BasicPool::new_full(
				builder.config().transaction_pool.clone(),
				pool_api,
				builder.prometheus_registry(),
				builder.spawn_handle(),
				builder.client().clone(),
			);
			Ok(pool)
		})?
		.with_import_queue(|_config, client, _, _, spawner, registry| {
			let import_queue = cumulus_consensus::import_queue::import_queue(
				client.clone(),
				client,
				inherent_data_providers.clone(),
				spawner,
				registry,
			)?;

			Ok(import_queue)
		})?;

		(builder, inherent_data_providers)
		}};
}

/// Run a collator node with the given parachain `Configuration` and relaychain `Configuration`
///
/// This function blocks until done.
pub fn run_collator(
	parachain_config: Configuration,
	key: Arc<CollatorPair>,
	mut polkadot_config: polkadot_collator::Configuration,
	id: polkadot_primitives::parachain::Id,
) -> sc_service::error::Result<TaskManager> {
	let mut parachain_config = prepare_collator_config(parachain_config);

	parachain_config.informant_output_format = OutputFormat {
		enable_color: true,
		prefix: format!("[{}] ", Color::Yellow.bold().paint("Parachain")),
	};

	let (builder, inherent_data_providers) = new_full_start!(parachain_config);
	inherent_data_providers
		.register_provider(sp_timestamp::InherentDataProvider)
		.unwrap();

	let block_announce_validator = DelayedBlockAnnounceValidator::new();
	let block_announce_validator_copy = block_announce_validator.clone();
	let service = builder
		.with_finality_proof_provider(|client, backend| {
			// GenesisAuthoritySetProvider is implemented for StorageAndProofProvider
			let provider = client as Arc<dyn StorageAndProofProvider<_, _>>;
			Ok(Arc::new(GrandpaFinalityProofProvider::new(backend, provider)) as _)
		})?
		.with_block_announce_validator(|_client| Box::new(block_announce_validator_copy))?
		.build_full()?;

	let registry = service.prometheus_registry.clone();

	let proposer_factory = sc_basic_authorship::ProposerFactory::new(
		service.client.clone(),
		service.transaction_pool.clone(),
		registry.as_ref(),
	);

	let block_import = service.client.clone();
	let client = service.client.clone();
	let network = service.network.clone();
	let announce_block = Arc::new(move |hash, data| network.announce_block(hash, data));
	let builder = CollatorBuilder::new(
		proposer_factory,
		inherent_data_providers,
		block_import,
		client.clone(),
		id,
		client,
		announce_block,
		block_announce_validator,
	);

	polkadot_config.informant_output_format = OutputFormat {
		enable_color: true,
		prefix: format!("[{}] ", Color::Blue.bold().paint("Relaychain")),
	};

	let (polkadot_future, task_manager) =
		polkadot_collator::start_collator(builder, id, key, polkadot_config)?;

	// Make sure the polkadot task manager survives as long as the service.
	let polkadot_future = polkadot_future.then(move |_| {
		let _ = task_manager;
		ready(())
	});

	service
		.task_manager
		.spawn_essential_handle()
		.spawn("polkadot", polkadot_future);

	Ok(service.task_manager)
}



#[test]
fn validate_block_issue() {
	validate_block_issue_in()
}
pub fn validate_block_issue_in() {
	let block_data_encoded = &[199u8, 255, 183, 218, 191, 41, 3, 47, 2, 176, 252, 109, 150, 51, 91, 118, 129, 180, 244, 130, 162, 27, 86, 105, 222, 82, 243, 152, 227, 65, 249, 23, 117, 48, 116, 32, 186, 87, 79, 35, 141, 109, 98, 237, 202, 123, 230, 100, 230, 79, 119, 107, 140, 47, 71, 92, 192, 25, 82, 254, 128, 232, 34, 235, 241, 169, 184, 121, 99, 218, 126, 3, 58, 169, 65, 73, 115, 44, 226, 28, 100, 207, 153, 116, 76, 158, 61, 58, 193, 75, 249, 11, 221, 212, 39, 195, 210, 44, 0, 12, 40, 4, 1, 0, 11, 63, 193, 251, 127, 115, 1, 48, 4, 5, 1, 0, 0, 160, 0, 22, 25, 2, 0, 0, 16, 4, 6, 0, 0, 76, 156, 95, 9, 204, 233, 200, 136, 70, 155, 177, 160, 220, 234, 161, 41, 103, 46, 248, 84, 16, 76, 119, 97, 115, 109, 45, 116, 101, 115, 116, 45, 112, 97, 114, 97, 99, 104, 97, 105, 110, 25, 1, 130, 99, 192, 0, 128, 89, 197, 213, 153, 251, 21, 29, 139, 172, 172, 143, 108, 90, 211, 63, 52, 174, 152, 213, 26, 68, 152, 167, 204, 110, 46, 10, 78, 30, 134, 215, 87, 128, 71, 154, 109, 128, 124, 11, 239, 80, 44, 227, 175, 145, 241, 185, 181, 14, 110, 51, 105, 18, 8, 92, 208, 7, 200, 229, 241, 202, 199, 220, 227, 50, 144, 114, 97, 108, 105, 100, 97, 116, 105, 111, 110, 95, 102, 117, 110, 99, 116, 105, 111, 110, 95, 112, 97, 114, 97, 109, 115, 36, 0, 0, 160, 0, 135, 159, 0, 0, 0, 57, 3, 158, 170, 57, 78, 234, 86, 48, 224, 124, 72, 174, 12, 149, 88, 206, 247, 9, 141, 88, 95, 10, 152, 253, 190, 156, 230, 197, 88, 55, 87, 108, 96, 199, 175, 56, 80, 16, 3, 0, 0, 0, 128, 166, 217, 113, 14, 79, 60, 73, 148, 183, 178, 59, 134, 184, 238, 64, 234, 4, 65, 23, 76, 214, 169, 252, 120, 71, 58, 15, 63, 27, 99, 249, 116, 128, 18, 115, 91, 60, 0, 139, 174, 128, 203, 176, 165, 39, 234, 34, 12, 209, 56, 57, 195, 138, 155, 229, 48, 67, 173, 136, 66, 149, 122, 3, 120, 39, 128, 4, 146, 31, 93, 86, 149, 4, 99, 218, 194, 1, 69, 253, 159, 29, 175, 37, 100, 31, 216, 157, 83, 87, 225, 133, 73, 221, 229, 11, 181, 97, 77, 128, 222, 228, 191, 202, 58, 116, 246, 211, 131, 254, 204, 163, 241, 84, 2, 171, 27, 26, 249, 110, 73, 95, 45, 205, 72, 210, 158, 121, 26, 8, 105, 100, 128, 241, 70, 111, 51, 71, 172, 122, 241, 215, 159, 162, 43, 22, 71, 6, 235, 158, 25, 99, 143, 5, 33, 225, 244, 199, 139, 114, 57, 152, 12, 40, 1, 169, 3, 128, 232, 28, 128, 77, 252, 124, 47, 186, 52, 216, 73, 222, 22, 219, 140, 214, 107, 73, 220, 64, 171, 124, 142, 193, 242, 165, 134, 80, 96, 72, 122, 26, 91, 22, 128, 128, 192, 153, 223, 137, 249, 110, 147, 128, 208, 91, 22, 142, 125, 222, 84, 109, 219, 197, 238, 250, 162, 185, 150, 229, 244, 184, 70, 198, 35, 43, 8, 153, 128, 60, 69, 141, 126, 42, 41, 18, 255, 126, 96, 164, 151, 96, 246, 233, 12, 254, 107, 107, 174, 39, 196, 154, 236, 56, 145, 155, 41, 96, 183, 111, 179, 128, 5, 37, 202, 84, 139, 222, 229, 120, 226, 22, 95, 186, 91, 141, 202, 43, 223, 87, 107, 126, 77, 191, 21, 197, 211, 8, 80, 233, 11, 28, 208, 234, 128, 216, 33, 21, 182, 131, 39, 94, 172, 127, 21, 155, 210, 82, 255, 196, 242, 42, 216, 8, 146, 206, 245, 184, 4, 147, 86, 235, 249, 104, 199, 115, 145, 128, 4, 141, 250, 53, 233, 181, 161, 3, 223, 52, 106, 233, 95, 63, 27, 187, 91, 193, 1, 175, 16, 226, 170, 12, 2, 79, 50, 87, 249, 12, 180, 40, 128, 231, 3, 196, 100, 247, 75, 221, 135, 98, 72, 222, 69, 94, 216, 18, 187, 129, 75, 211, 145, 126, 252, 53, 152, 175, 81, 241, 222, 164, 108, 225, 131, 21, 1, 128, 0, 132, 128, 177, 33, 135, 193, 152, 75, 31, 57, 137, 100, 212, 6, 242, 8, 91, 70, 239, 243, 42, 8, 19, 165, 110, 4, 208, 102, 155, 140, 24, 216, 99, 206, 128, 5, 2, 45, 234, 97, 77, 244, 173, 93, 229, 19, 161, 152, 38, 163, 104, 36, 0, 103, 138, 172, 18, 124, 10, 136, 193, 32, 196, 167, 237, 29, 1, 196, 126, 20, 103, 160, 150, 188, 215, 26, 91, 106, 12, 129, 85, 226, 8, 16, 63, 46, 223, 59, 223, 56, 29, 235, 227, 49, 171, 116, 70, 173, 223, 220, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136, 95, 4, 171, 245, 203, 52, 214, 36, 67, 120, 205, 219, 241, 142, 132, 157, 150, 64, 202, 32, 144, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 1, 95, 0, 212, 30, 94, 22, 5, 103, 101, 188, 132, 97, 133, 16, 114, 201, 215, 220, 12, 0, 0, 0, 0, 0, 0, 0, 0, 18, 122, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 37, 2, 127, 64, 9, 157, 136, 14, 198, 129, 121, 156, 12, 243, 14, 136, 134, 55, 29, 169, 50, 121, 22, 105, 129, 2, 19, 11, 107, 239, 153, 233, 132, 153, 55, 211, 202, 150, 8, 0, 203, 56, 151, 94, 186, 91, 92, 140, 188, 171, 180, 125, 18, 203, 249, 217, 199, 1, 216, 153, 6, 67, 170, 238, 2, 4, 217, 75, 21, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 3, 128, 44, 152, 128, 211, 229, 18, 113, 14, 96, 90, 152, 197, 56, 91, 29, 9, 221, 169, 202, 135, 123, 135, 36, 213, 174, 40, 193, 145, 147, 89, 68, 198, 216, 226, 22, 128, 1, 99, 251, 219, 127, 171, 19, 167, 15, 10, 56, 119, 240, 221, 44, 10, 28, 130, 187, 145, 57, 68, 71, 245, 204, 160, 78, 25, 163, 200, 61, 225, 128, 76, 154, 106, 116, 249, 124, 89, 59, 204, 109, 151, 122, 216, 88, 116, 200, 154, 177, 14, 119, 86, 247, 103, 163, 193, 181, 214, 129, 7, 131, 181, 67, 128, 248, 114, 18, 119, 199, 187, 144, 243, 10, 29, 138, 20, 9, 10, 39, 4, 66, 241, 94, 179, 114, 96, 125, 33, 238, 138, 218, 70, 144, 18, 47, 121, 128, 58, 82, 38, 28, 100, 148, 240, 130, 203, 73, 2, 110, 197, 69, 15, 158, 22, 55, 238, 68, 3, 29, 184, 255, 85, 42, 20, 136, 122, 178, 139, 221, 128, 181, 42, 235, 145, 46, 201, 180, 150, 64, 131, 213, 95, 180, 168, 24, 196, 6, 144, 142, 216, 11, 36, 103, 134, 221, 184, 49, 23, 19, 216, 215, 55, 141, 8, 159, 4, 71, 4, 181, 104, 210, 22, 103, 53, 106, 90, 5, 12, 17, 135, 70, 255, 255, 128, 68, 169, 162, 8, 133, 173, 215, 177, 239, 197, 151, 50, 227, 189, 151, 229, 139, 218, 2, 193, 139, 171, 251, 157, 114, 183, 12, 42, 30, 90, 108, 154, 128, 34, 168, 82, 236, 172, 219, 25, 214, 222, 86, 209, 46, 210, 150, 53, 143, 123, 67, 164, 182, 21, 100, 245, 186, 77, 77, 100, 248, 160, 248, 78, 215, 128, 93, 85, 69, 108, 217, 138, 59, 20, 176, 205, 16, 251, 14, 207, 160, 215, 59, 12, 70, 87, 143, 28, 146, 250, 251, 11, 149, 165, 10, 54, 189, 7, 128, 85, 53, 226, 218, 219, 164, 128, 159, 218, 16, 3, 170, 31, 229, 177, 249, 234, 88, 100, 196, 49, 102, 22, 221, 124, 221, 61, 136, 141, 119, 114, 249, 128, 174, 69, 10, 170, 226, 147, 181, 173, 154, 40, 48, 29, 204, 126, 178, 111, 107, 167, 211, 133, 64, 126, 3, 211, 188, 159, 81, 121, 72, 120, 198, 97, 128, 21, 232, 103, 84, 75, 130, 254, 224, 46, 187, 182, 222, 157, 73, 11, 222, 225, 151, 70, 47, 181, 13, 16, 126, 176, 199, 69, 131, 122, 165, 158, 34, 128, 229, 41, 62, 38, 159, 197, 65, 200, 61, 216, 41, 139, 184, 214, 170, 93, 167, 62, 31, 57, 7, 236, 242, 207, 210, 60, 164, 58, 187, 161, 189, 131, 128, 98, 84, 156, 110, 39, 37, 56, 34, 193, 158, 21, 85, 136, 57, 99, 66, 41, 40, 157, 61, 22, 215, 38, 121, 42, 149, 57, 231, 153, 87, 249, 130, 128, 116, 193, 209, 145, 11, 60, 89, 54, 149, 2, 157, 118, 139, 98, 166, 123, 140, 104, 93, 134, 55, 111, 163, 73, 129, 194, 67, 68, 35, 10, 22, 234, 128, 38, 120, 24, 133, 203, 253, 14, 49, 116, 190, 149, 142, 60, 150, 161, 41, 244, 120, 117, 109, 221, 71, 195, 220, 212, 60, 89, 11, 44, 187, 115, 253, 128, 131, 212, 87, 9, 29, 170, 99, 162, 218, 45, 122, 29, 25, 33, 47, 184, 98, 170, 144, 143, 89, 231, 117, 249, 44, 206, 117, 53, 28, 46, 72, 168, 128, 255, 239, 211, 255, 187, 59, 158, 222, 81, 24, 194, 92, 60, 90, 176, 191, 12, 59, 207, 48, 87, 57, 170, 190, 149, 187, 145, 125, 68, 124, 243, 52, 128, 168, 178, 6, 154, 235, 174, 183, 28, 13, 218, 252, 94, 216, 139, 64, 47, 195, 201, 96, 254, 171, 59, 38, 216, 69, 157, 121, 85, 7, 225, 111, 248, 128, 95, 172, 21, 61, 57, 137, 220, 83, 132, 195, 186, 150, 67, 121, 120, 195, 37, 212, 130, 173, 41, 165, 174, 46, 24, 253, 118, 51, 73, 55, 133, 151, 128, 136, 131, 35, 24, 36, 137, 40, 28, 40, 243, 21, 248, 199, 57, 166, 118, 195, 22, 205, 177, 199, 58, 49, 106, 55, 161, 0, 232, 255, 40, 85, 65, 128, 140, 47, 182, 127, 127, 83, 238, 200, 188, 204, 66, 169, 45, 68, 35, 100, 237, 36, 124, 118, 182, 104, 195, 21, 231, 25, 83, 34, 231, 241, 132, 71, 21, 1, 128, 0, 66, 128, 202, 68, 183, 80, 181, 78, 208, 108, 145, 145, 131, 38, 211, 228, 78, 131, 220, 28, 135, 23, 236, 198, 247, 74, 224, 24, 109, 181, 126, 197, 49, 89, 128, 33, 41, 178, 253, 172, 135, 7, 67, 183, 159, 125, 102, 15, 85, 34, 99, 43, 189, 19, 34, 115, 159, 71, 239, 25, 132, 186, 233, 30, 235, 60, 197, 180, 85, 13, 173, 217, 243, 219, 4, 44, 34, 11, 0, 0, 128, 125, 217, 74, 205, 160, 137, 167, 115, 34, 126, 102, 72, 12, 243, 208, 97, 230, 42, 100, 57, 169, 180, 107, 150, 206, 47, 201, 40, 208, 182, 104, 215, 172, 127, 0, 0, 195, 101, 195, 207, 89, 214, 113, 235, 114, 218, 14, 122, 65, 19, 196, 159, 31, 5, 21, 244, 98, 205, 207, 132, 224, 241, 214, 4, 93, 252, 187, 32, 116, 239, 177, 89, 115, 1, 0, 0, 25, 41, 127, 0, 13, 42, 82, 147, 121, 71, 80, 136, 211, 226, 154, 145, 140, 212, 120, 114, 26, 57, 236, 118, 123, 213, 38, 145, 17, 230, 73, 42, 22, 117, 112, 42, 137, 40, 69, 1, 120, 74, 44, 142, 240, 104, 107, 255, 29, 194, 168, 67, 74, 251, 215, 242, 168, 98, 181, 98, 180, 162, 112, 149, 238, 14, 108, 162, 0, 156, 132, 226, 25, 189, 249, 45, 139, 196, 246, 228, 166, 22, 191, 136, 225, 243, 186, 180, 55, 199, 236, 33, 136, 37, 150, 45, 46, 43, 254, 139, 187, 161, 95, 215, 146, 205, 98, 220, 4, 179, 39, 202, 20, 121, 195, 145, 182, 28, 18, 35, 201, 185, 8, 199, 45, 253, 52, 124, 190, 79, 56, 55, 179, 210, 133, 12, 181, 253, 86, 143, 214, 17, 205, 90, 239, 128, 123, 250, 47, 161, 62, 118, 243, 168, 125, 68, 189, 200, 97, 137, 42, 101, 165, 159, 142, 127, 209, 117, 153, 246, 246, 210, 134, 232, 170, 108, 68, 198, 228, 100, 59, 63, 243, 16, 253, 180, 93, 118, 23, 246, 188, 207, 213, 137, 178, 183, 23, 200, 158, 50, 181, 255, 170, 222, 146, 15, 234, 136, 40, 230, 214, 88, 91, 23, 51, 226, 14, 215, 253, 15, 206, 121, 208, 195, 131, 188, 8, 76, 69, 100, 189, 211, 251, 123, 233, 186, 86, 169, 63, 237, 118, 87, 132, 65, 127, 146, 104, 125, 57, 177, 16, 105, 9, 26, 65, 179, 86, 4, 244, 27, 11, 229, 185, 97, 56, 161, 167, 154, 170, 121, 207, 153, 181, 103, 234, 189, 109, 159, 135, 180, 192, 18, 201, 246, 158, 69, 13, 127, 71, 0, 247, 83, 202, 132, 96, 207, 51, 144, 187, 172, 103, 231, 151, 1, 59, 163, 94, 106, 249, 244, 242, 196, 233, 56, 63, 54, 149, 38, 127, 178, 34, 201, 47, 47, 230, 107, 180, 124, 217, 61, 150, 234, 236, 21, 150, 231, 6, 32, 26, 53, 70, 184, 164, 213, 79, 246, 28, 67, 215, 108, 43, 64, 62, 124, 132, 187, 193, 62, 54, 137, 200, 214, 252, 156, 151, 89, 216, 105, 74, 74, 222, 20, 188, 1, 178, 92, 119, 171, 12, 138, 80, 92, 210, 207, 9, 8, 91, 59, 63, 180, 28, 230, 195, 181, 174, 178, 103, 59, 231, 102, 18, 185, 247, 91, 100, 146, 18, 198, 110, 111, 107, 151, 64, 139, 252, 186, 160, 25, 25, 96, 87, 173, 93, 136, 65, 45, 250, 54, 189, 48, 155, 158, 225, 77, 7, 19, 124, 24, 1, 16, 231, 5, 107, 201, 244, 139, 135, 171, 27, 50, 131, 223, 135, 48, 233, 214, 35, 2, 238, 74, 72, 229, 242, 63, 3, 52, 58, 219, 115, 120, 109, 122, 198, 84, 185, 110, 214, 196, 40, 117, 243, 47, 192, 111, 8, 228, 201, 215, 55, 89, 180, 86, 33, 254, 18, 168, 125, 93, 205, 3, 129, 191, 188, 177, 66, 27, 161, 165, 218, 174, 128, 3, 121, 35, 218, 13, 137, 205, 35, 43, 172, 132, 83, 44, 160, 47, 113, 39, 193, 39, 6, 218, 71, 128, 64, 228, 191, 78, 131, 18, 177, 75, 117, 246, 202, 85, 179, 4, 93, 97, 88, 174, 189, 97, 36, 169, 23, 58, 119, 246, 8, 114, 156, 151, 160, 56, 117, 238, 255, 164, 31, 165, 157, 107, 132, 163, 114, 13, 63, 139, 179, 23, 128, 142, 77, 156, 74, 2, 109, 246, 182, 35, 185, 94, 13, 173, 89, 26, 68, 164, 194, 143, 86, 231, 49, 70, 187, 25, 10, 112, 166, 155, 127, 160, 15, 160, 77, 126, 35, 2, 43, 84, 178, 216, 96, 92, 226, 169, 40, 255, 89, 207, 55, 176, 28, 164, 21, 144, 184, 2, 250, 239, 91, 64, 217, 81, 218, 112, 16, 148, 61, 168, 4, 77, 255, 219, 21, 6, 74, 224, 109, 149, 102, 249, 166, 8, 201, 40, 153, 194, 30, 248, 53, 236, 198, 28, 127, 69, 140, 94, 243, 81, 169, 39, 134, 201, 160, 13, 126, 239, 42, 57, 116, 247, 198, 220, 149, 155, 225, 143, 149, 93, 44, 225, 6, 77, 121, 102, 205, 62, 246, 84, 86, 196, 15, 153, 91, 177, 65, 202, 215, 111, 166, 60, 60, 129, 63, 170, 8, 42, 127, 178, 99, 169, 53, 161, 132, 241, 14, 36, 72, 25, 202, 65, 7, 194, 157, 204, 54, 228, 237, 57, 156, 136, 163, 168, 126, 140, 255, 56, 128, 151, 14, 151, 116, 103, 15, 151, 177, 106, 47, 101, 178, 78, 219, 93, 7, 100, 65, 236, 183, 34, 219, 76, 80, 67, 2, 169, 238, 54, 103, 127, 54, 92, 1, 237, 189, 65, 158, 67, 186, 109, 219, 14, 246, 8, 42, 161, 232, 181, 38, 243, 10, 50, 137, 243, 45, 239, 43, 38, 201, 179, 110, 169, 9, 233, 27, 47, 203, 83, 146, 40, 127, 53, 159, 180, 56, 243, 177, 92, 195, 180, 215, 239, 107, 65, 145, 83, 59, 200, 152, 166, 162, 201, 80, 51, 226, 83, 115, 111, 33, 20, 193, 38, 181, 253, 253, 193, 200, 42, 145, 202, 213, 62, 198, 161, 42, 168, 247, 15, 57, 246, 60, 127, 35, 58, 124, 21, 155, 20, 233, 98, 77, 190, 168, 137, 81, 125, 198, 155, 199, 182, 240, 121, 207, 236, 53, 86, 190, 199, 190, 109, 54, 212, 116, 140, 228, 172, 121, 172, 79, 158, 63, 76, 25, 247, 135, 226, 16, 64, 122, 76, 106, 92, 92, 86, 26, 214, 78, 119, 83, 109, 110, 1, 165, 165, 252, 86, 147, 195, 51, 61, 232, 245, 212, 101, 158, 45, 113, 63, 28, 55, 231, 70, 81, 28, 41, 247, 152, 121, 49, 46, 39, 211, 181, 137, 198, 252, 153, 200, 185, 148, 162, 44, 161, 22, 147, 132, 174, 185, 154, 30, 11, 143, 50, 114, 218, 221, 244, 62, 245, 34, 120, 171, 177, 128, 191, 66, 172, 17, 75, 44, 194, 92, 10, 67, 254, 27, 24, 1, 145, 89, 240, 53, 151, 117, 114, 92, 69, 120, 84, 63, 11, 187, 86, 184, 109, 211, 117, 2, 183, 155, 138, 84, 249, 115, 30, 162, 49, 106, 162, 226, 81, 168, 101, 217, 96, 25, 180, 156, 17, 212, 108, 22, 76, 124, 125, 194, 252, 30, 30, 134, 114, 59, 226, 219, 71, 44, 195, 238, 107, 94, 187, 133, 112, 50, 54, 172, 223, 193, 48, 124, 230, 145, 222, 133, 157, 75, 110, 206, 189, 131, 230, 88, 110, 253, 159, 52, 139, 24, 15, 80, 248, 78, 246, 217, 39, 94, 184, 255, 137, 49, 159, 170, 176, 9, 233, 133, 96, 75, 164, 110, 174, 32, 193, 80, 89, 59, 189, 47, 90, 206, 177, 115, 84, 15, 154, 106, 116, 228, 184, 221, 30, 91, 195, 142, 123, 224, 112, 11, 227, 127, 51, 70, 65, 60, 118, 51, 192, 161, 229, 43, 222, 123, 56, 52, 251, 139, 35, 62, 10, 203, 169, 211, 148, 246, 65, 213, 245, 143, 198, 224, 236, 124, 225, 237, 168, 98, 16, 233, 24, 13, 10, 88, 26, 176, 94, 11, 100, 227, 199, 193, 217, 143, 140, 198, 224, 28, 255, 214, 150, 132, 20, 67, 47, 29, 104, 29, 234, 26, 213, 238, 69, 129, 214, 215, 14, 60, 184, 30, 163, 161, 93, 107, 35, 177, 15, 198, 139, 237, 205, 216, 100, 243, 248, 104, 35, 102, 215, 19, 176, 153, 130, 56, 219, 179, 94, 241, 83, 255, 213, 12, 216, 159, 190, 48, 230, 210, 240, 222, 70, 191, 147, 188, 237, 132, 156, 81, 99, 19, 168, 93, 39, 237, 220, 174, 112, 73, 71, 229, 18, 150, 58, 190, 113, 79, 98, 47, 229, 149, 164, 217, 238, 226, 162, 139, 51, 203, 142, 92, 20, 105, 183, 188, 83, 188, 208, 89, 100, 72, 139, 204, 71, 253, 242, 88, 173, 182, 205, 134, 175, 59, 176, 237, 127, 221, 229, 29, 11, 225, 151, 50, 66, 239, 208, 218, 226, 14, 193, 8, 151, 74, 57, 3, 22, 108, 244, 74, 133, 153, 120, 224, 115, 14, 223, 174, 140, 230, 1, 88, 193, 169, 136, 251, 152, 22, 140, 238, 77, 189, 88, 120, 128, 11, 206, 80, 229, 80, 41, 111, 103, 121, 203, 127, 17, 230, 57, 211, 153, 3, 97, 178, 106, 200, 254, 60, 159, 226, 42, 3, 145, 139, 199, 246, 194, 160, 205, 63, 17, 102, 248, 11, 114, 28, 138, 255, 232, 186, 59, 161, 14, 212, 181, 209, 238, 213, 160, 152, 136, 230, 128, 12, 42, 59, 234, 243, 27, 180, 70, 19, 43, 89, 141, 26, 231, 43, 149, 191, 73, 184, 208, 124, 183, 245, 2, 189, 56, 143, 221, 21, 95, 83, 81, 43, 72, 153, 184, 150, 137, 89, 40, 69, 207, 239, 179, 69, 238, 96, 188, 41, 55, 154, 143, 112, 210, 244, 229, 218, 77, 116, 10, 183, 203, 44, 248, 181, 250, 83, 26, 76, 120, 162, 201, 157, 225, 101, 1, 92, 212, 87, 22, 30, 199, 113, 161, 78, 171, 186, 253, 217, 163, 36, 22, 235, 211, 189, 149, 220, 94, 37, 151, 164, 101, 163, 123, 75, 223, 123, 232, 99, 167, 129, 45, 109, 25, 135, 215, 233, 60, 218, 33, 81, 110, 48, 88, 74, 228, 230, 224, 110, 1, 180, 225, 228, 246, 251, 166, 158, 104, 115, 163, 154, 66, 94, 168, 59, 99, 217, 42, 235, 61, 196, 233, 112, 252, 58, 108, 114, 121, 195, 30, 226, 135, 102, 71, 32, 251, 97, 24, 139, 113, 73, 171, 38, 129, 125, 206, 168, 17, 57, 218, 72, 94, 203, 162, 177, 134, 140, 73, 40, 204, 197, 157, 241, 250, 152, 35, 240, 3, 225, 73, 89, 115, 186, 203, 85, 116, 207, 5, 130, 119, 97, 136, 20, 107, 185, 253, 155, 119, 208, 240, 226, 163, 236, 195, 166, 141, 147, 14, 86, 239, 97, 157, 29, 214, 48, 57, 186, 201, 255, 1, 255, 191, 211, 239, 139, 61, 179, 237, 24, 75, 119, 75, 134, 231, 83, 255, 245, 205, 224, 135, 192, 118, 103, 198, 115, 129, 208, 95, 200, 169, 103, 226, 23, 177, 95, 59, 31, 98, 213, 11, 112, 251, 234, 60, 55, 218, 240, 166, 202, 168, 255, 235, 107, 72, 248, 239, 178, 44, 230, 157, 29, 40, 181, 171, 224, 109, 36, 130, 233, 231, 78, 152, 164, 83, 64, 152, 7, 93, 52, 166, 107, 62, 187, 143, 209, 77, 96, 46, 16, 84, 6, 184, 33, 115, 124, 16, 201, 130, 234, 113, 201, 128, 1, 104, 14, 76, 166, 222, 244, 28, 110, 33, 168, 67, 182, 62, 37, 247, 223, 118, 40, 11, 105, 145, 112, 36, 2, 255, 61, 195, 7, 44, 149, 78, 195, 104, 73, 236, 119, 242, 157, 232, 232, 170, 141, 197, 155, 156, 53, 184, 196, 83, 121, 228, 153, 199, 3, 147, 235, 122, 22, 81, 230, 18, 123, 41, 107, 196, 248, 229, 81, 116, 124, 144, 150, 64, 40, 240, 249, 246, 219, 180, 239, 24, 105, 105, 185, 171, 32, 172, 44, 88, 66, 97, 160, 120, 43, 52, 144, 5, 176, 86, 127, 103, 168, 94, 76, 185, 95, 241, 246, 246, 19, 245, 249, 182, 179, 44, 38, 173, 211, 60, 1, 106, 86, 236, 65, 2, 166, 221, 162, 178, 89, 63, 250, 233, 209, 106, 225, 50, 149, 181, 225, 95, 219, 215, 184, 175, 171, 75, 21, 136, 212, 123, 226, 190, 230, 108, 204, 67, 77, 229, 158, 116, 244, 158, 38, 102, 166, 172, 155, 37, 201, 64, 236, 181, 202, 141, 117, 75, 214, 179, 246, 14, 186, 178, 17, 176, 49, 95, 81, 13, 3, 173, 158, 151, 44, 202, 103, 98, 123, 237, 37, 213, 145, 200, 141, 25, 105, 254, 72, 92, 142, 207, 155, 11, 223, 38, 249, 220, 131, 199, 153, 198, 61, 110, 224, 103, 186, 151, 17, 37, 231, 255, 182, 11, 248, 177, 80, 71, 21, 195, 243, 7, 152, 113, 58, 204, 2, 52, 204, 211, 249, 10, 114, 240, 67, 214, 217, 242, 139, 142, 121, 61, 83, 42, 153, 184, 188, 70, 222, 46, 249, 105, 121, 16, 221, 20, 213, 165, 163, 223, 190, 79, 96, 170, 226, 156, 165, 31, 107, 192, 141, 127, 145, 181, 42, 239, 188, 112, 66, 195, 237, 4, 156, 102, 70, 119, 128, 90, 225, 132, 13, 181, 181, 86, 14, 44, 51, 170, 182, 176, 99, 222, 86, 135, 129, 227, 247, 142, 169, 43, 136, 172, 37, 42, 213, 206, 15, 199, 193, 79, 171, 2, 32, 158, 169, 105, 165, 161, 90, 34, 25, 164, 140, 116, 74, 117, 135, 195, 166, 12, 36, 179, 200, 44, 175, 144, 197, 222, 101, 203, 155, 33, 140, 204, 169, 193, 225, 47, 53, 120, 164, 184, 40, 238, 101, 37, 242, 132, 103, 168, 155, 8, 67, 178, 219, 66, 3, 101, 180, 233, 188, 162, 153, 112, 36, 163, 236, 182, 78, 168, 180, 111, 24, 8, 145, 88, 116, 122, 61, 170, 70, 43, 21, 128, 45, 200, 170, 188, 237, 206, 96, 45, 220, 155, 26, 100, 58, 44, 205, 254, 46, 181, 139, 171, 54, 187, 139, 46, 59, 134, 58, 135, 248, 135, 175, 129, 128, 201, 42, 186, 118, 253, 16, 246, 70, 245, 157, 107, 249, 79, 153, 102, 227, 133, 167, 97, 113, 131, 249, 8, 112, 47, 205, 46, 81, 235, 190, 229, 78, 97, 241, 235, 6, 247, 87, 210, 73, 147, 130, 201, 10, 209, 6, 187, 65, 188, 149, 69, 177, 12, 227, 130, 233, 107, 125, 194, 244, 158, 244, 190, 36, 109, 98, 122, 100, 120, 216, 125, 47, 171, 52, 216, 228, 223, 253, 196, 76, 25, 133, 83, 27, 223, 215, 51, 234, 28, 103, 123, 114, 214, 115, 71, 96, 10, 109, 93, 149, 22, 90, 229, 46, 22, 12, 40, 173, 255, 123, 148, 50, 116, 134, 62, 24, 37, 59, 91, 219, 206, 4, 139, 114, 72, 72, 106, 16, 136, 158, 69, 162, 166, 214, 217, 123, 174, 112, 204, 184, 86, 155, 211, 218, 192, 234, 182, 64, 109, 25, 173, 133, 47, 245, 28, 187, 116, 185, 141, 49, 76, 5, 6, 245, 109, 1, 137, 133, 27, 158, 125, 109, 241, 86, 217, 2, 208, 17, 133, 219, 202, 58, 249, 239, 4, 162, 179, 94, 43, 46, 3, 66, 222, 74, 154, 123, 101, 42, 165, 44, 236, 184, 60, 73, 190, 91, 97, 239, 234, 161, 26, 103, 151, 21, 12, 46, 192, 248, 29, 79, 143, 222, 95, 190, 26, 41, 55, 82, 118, 50, 161, 24, 9, 66, 55, 205, 12, 220, 50, 110, 177, 10, 122, 78, 21, 56, 145, 205, 118, 148, 151, 138, 120, 17, 8, 134, 161, 18, 205, 78, 184, 87, 177, 184, 1, 184, 69, 16, 63, 202, 108, 50, 20, 124, 1, 11, 177, 219, 223, 158, 158, 32, 195, 212, 36, 171, 252, 240, 87, 72, 50, 98, 185, 26, 1, 104, 16, 227, 74, 19, 228, 47, 34, 132, 133, 122, 51, 199, 152, 204, 153, 158, 137, 21, 11, 232, 119, 226, 59, 48, 114, 164, 208, 45, 58, 239, 115, 149, 60, 154, 122, 147, 130, 76, 215, 125, 33, 118, 34, 15, 30, 229, 211, 27, 145, 224, 174, 230, 18, 177, 185, 70, 104, 186, 4, 66, 64, 64, 75, 19, 79, 26, 150, 154, 15, 97, 151, 227, 157, 212, 99, 213, 202, 142, 97, 237, 251, 59, 161, 163, 241, 192, 132, 118, 114, 111, 99, 101, 115, 115, 101, 100, 95, 100, 111, 119, 110, 119, 97, 114, 100, 95, 109, 101, 115, 115, 97, 103, 101, 115, 58, 16, 0, 0, 0, 0, 232, 128, 65, 0, 84, 94, 137, 207, 54, 69, 242, 30, 244, 165, 23, 68, 241, 62, 110, 78, 69, 16, 100, 0, 0, 0, 128, 230, 189, 212, 255, 161, 199, 190, 12, 85, 197, 204, 173, 105, 171, 222, 68, 216, 131, 47, 144, 237, 207, 200, 21, 98, 31, 52, 249, 124, 116, 234, 214, 49, 1, 142, 86, 215, 86, 199, 87, 53, 247, 65, 0, 128, 244, 200, 109, 56, 99, 212, 88, 250, 121, 120, 209, 164, 110, 13, 88, 61, 227, 237, 142, 244, 22, 11, 123, 37, 130, 89, 149, 35, 251, 136, 133, 194, 128, 19, 42, 174, 184, 71, 179, 176, 222, 62, 18, 176, 174, 210, 151, 111, 161, 91, 92, 185, 194, 176, 62, 38, 117, 162, 234, 48, 253, 186, 128, 167, 43];
	let header_encoded = &[86u8, 196, 15, 153, 91, 177, 65, 202, 215, 111, 166, 60, 60, 129, 63, 170, 8, 42, 127, 178, 99, 169, 53, 161, 132, 241, 14, 36, 72, 25, 202, 65, 113, 48, 135, 61, 212, 91, 193, 52, 6, 50, 37, 225, 74, 80, 12, 162, 193, 104, 166, 75, 119, 233, 41, 82, 170, 32, 48, 164, 212, 173, 117, 191, 195, 7, 43, 112, 154, 15, 188, 46, 46, 172, 93, 197, 125, 171, 223, 180, 44, 216, 3, 199, 110, 87, 181, 100, 209, 48, 247, 66, 237, 173, 155, 113, 219, 31, 0];
	let res_header = call_imp::call_validate_block(header_encoded.to_vec(), block_data_encoded.to_vec()).expect("Calls `validate_block`");
}

mod call_imp {
	use codec::{Encode, Decode};
	use parachain_runtime::{Block, Hash, Header, WASM_BINARY};
	use sc_executor::{
		error::Result, sp_wasm_interface::HostFunctions, WasmExecutionMethod, WasmExecutor,
	};
	use sp_core::traits::CallInWasm as _;
	use sp_io::TestExternalities;
	use polkadot_parachain::primitives::{BlockData, HeadData, ValidationCode, ValidationParams, ValidationResult};

	pub(crate) fn call_validate_block(
		encoded_parent_head: Vec<u8>,
		encoded_block_data: Vec<u8>,
	) -> Result<Header> {
		let mut ext = TestExternalities::default();
		let mut ext_ext = ext.ext();
		let params = ValidationParams {
			block_data: BlockData(encoded_block_data),
			parent_head: HeadData(encoded_parent_head),
			code_upgrade_allowed: None,
			max_code_size: 1024,
			max_head_data_size: 1024,
			relay_chain_height: 1,
		}
		.encode();

		let executor = WasmExecutor::new(
			//WasmExecutionMethod::Interpreted,
			WasmExecutionMethod::Compiled,
			Some(1024),
			sp_io::SubstrateHostFunctions::host_functions(),
			1,
		);

		let r = executor
			.call_in_wasm(
				&WASM_BINARY,
				None,
				"validate_block",
				&params,
				&mut ext_ext,
				sp_core::traits::MissingHostFunctions::Disallow,
			)
			.map(|v| ValidationResult::decode(&mut &v[..]).expect("Decode `ValidationResult`."))
			.map(|v| Header::decode(&mut &v.head_data.0[..]).expect("Decode `Header`."))
			.map_err(|err| err.into());
		panic!("c {:?}", r);
//		 Ok(Header { parent_hash: 0xc7ffb7dabf29032f02b0fc6d96335b7681b4f482a21b5669de52f398e341f917, number: 3101, state_root: 0x7420ba574f238d6d62edca7be664e64f776b8c2f475cc01952fe80e822ebf1a9, extrinsics_root: 0xb87963da7e033aa94149732ce21c64cf99744c9e3d3ac14bf90bddd427c3d22c, digest: Digest { logs: [] } })
		r
	}

}
